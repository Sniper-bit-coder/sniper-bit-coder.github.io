/*!
 * jekyll-theme-chirpy v7.3.1 | Â© 2019 Cotes Chung | MIT Licensed | https://github.com/cotes2020/jekyll-theme-chirpy/
 */
!function(){"use strict";class t{constructor(){this.particles=[],this.haloEffects=[],this.canvas=null,this.ctx=null,this.isDarkMode=!1,this.init()}init(){this.detectThemeMode(),this.setupCanvas(),this.bindEvents(),this.startAnimation()}detectThemeMode(){const t=document.documentElement;this.isDarkMode="dark"===t.getAttribute("data-mode")||window.matchMedia("(prefers-color-scheme: dark)").matches}setupCanvas(){this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.canvas.style.position="fixed",this.canvas.style.top="0",this.canvas.style.left="0",this.canvas.style.width="100%",this.canvas.style.height="100%",this.canvas.style.pointerEvents="none",this.canvas.style.zIndex="9999",document.body.appendChild(this.canvas),this.resizeCanvas(),window.addEventListener("resize",this.resizeCanvas.bind(this))}resizeCanvas(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight}bindEvents(){document.addEventListener("click",this.handleClick.bind(this));new MutationObserver(t=>{t.forEach(t=>{"data-mode"===t.attributeName&&(this.isDarkMode="dark"===document.documentElement.getAttribute("data-mode"))})}).observe(document.documentElement,{attributes:!0})}handleClick(t){const e=document.getElementById("sidebar"),s=document.getElementById("sidebar-trigger"),i=document.getElementById("mask"),a="function"==typeof t.composedPath?t.composedPath():null,n=e&&(e.contains(t.target)||a&&a.includes(e)),h=s&&(s.contains(t.target)||a&&a.includes(s)),c=i&&(i.contains(t.target)||a&&a.includes(i));if(n||h||c)return;const d=t.clientX,l=t.clientY;this.createDarkModeExplosion(d,l)}createLightModeExplosion(t,e){const s=["#ff6b6b","#4ecdc4","#45b7d1","#f9ca24","#f0932b","#eb4d4b","#6c5ce7","#a29bfe"];this.haloEffects.push({x:t,y:e,size:25,life:1,decay:.03});for(let i=0;i<20;i++){const i=Math.random()*Math.PI*2,a=3*Math.random()+1,n={x:t,y:e,size:4*Math.random()+2,speedX:Math.cos(i)*a,speedY:Math.sin(i)*a,color:s[Math.floor(Math.random()*s.length)],life:1,decay:.01*Math.random()+.008,type:"light"};this.particles.push(n)}}createDarkModeExplosion(t,e){const s=["#00FFFF","#FF7F50","#9400D3","#FFD700"];for(let i=0;i<35;i++){const i=Math.random()*Math.PI*2,a=8*Math.random()+4,n=Math.random()<.2,h={x:t,y:e,size:n?3*Math.random()+1:2*Math.random()+1,speedX:Math.cos(i)*a,speedY:Math.sin(i)*a-2,color:s[Math.floor(Math.random()*s.length)],life:1,decay:.01*Math.random()+.008,gravity:.2,flicker:.1*Math.random()+.05,isLine:n,lineLength:n?10*Math.random()+5:0,type:"dark"};this.particles.push(h)}}startAnimation(){const t=()=>{this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.updateAndRenderHaloEffects(),this.updateAndRenderParticles(),requestAnimationFrame(t)};t()}updateAndRenderHaloEffects(){for(let t=this.haloEffects.length-1;t>=0;t--){const e=this.haloEffects[t];e.life-=e.decay,e.life<=0?this.haloEffects.splice(t,1):this.isDarkMode||(this.ctx.globalAlpha=.2*e.life,this.ctx.fillStyle="rgba(255, 255, 255, 0.2)",this.ctx.beginPath(),this.ctx.arc(e.x,e.y,e.size*e.life,0,2*Math.PI),this.ctx.fill())}}updateAndRenderParticles(){for(let t=this.particles.length-1;t>=0;t--){const e=this.particles[t];this.updateParticle(e),e.life<=0?this.particles.splice(t,1):this.renderParticle(e)}}updateParticle(t){"light"===t.type?(t.x+=t.speedX,t.y+=t.speedY,t.speedX*=.98,t.speedY*=.98,t.life-=t.decay):"dark"===t.type&&(t.speedY+=t.gravity||0,t.x+=t.speedX,t.y+=t.speedY,t.life<.3?t.life-=2*t.decay:t.life-=t.decay)}renderParticle(t){if(this.ctx.globalAlpha=t.life,"light"===t.type)this.ctx.fillStyle=t.color,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.size,0,2*Math.PI),this.ctx.fill();else if("dark"===t.type)if(this.ctx.fillStyle=t.color,t.isLine){this.ctx.save(),this.ctx.translate(t.x,t.y);const e=Math.atan2(t.speedY,t.speedX);this.ctx.rotate(e),this.ctx.beginPath(),this.ctx.ellipse(0,0,t.lineLength,t.size,0,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}else this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.size,0,2*Math.PI),this.ctx.fill()}}document.addEventListener("DOMContentLoaded",()=>{new t})}();
